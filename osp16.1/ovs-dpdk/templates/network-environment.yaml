#This file is an example of an environment file for defining the isolated
#networks and related parameters.
resource_registry:
  # Network Interface templates to use (these files must exist). You can
  # override these by including one of the net-*.yaml environment files,
  # such as net-bond-with-vlans.yaml, or modifying the list here.
  # Port assignments for the Controller
  OS::TripleO::Controller::Net::SoftwareConfig:
    /home/stack/ovs-dpdk/templates/nic-configs/controller.yaml
  # Port assignments for the Compute
  OS::TripleO::ComputeOvsDpdk::Net::SoftwareConfig:
    /home/stack/ovs-dpdk/templates/nic-configs/computedpdk.yaml
  # Port assignments for the Compute DPDK-SRIOV
  OS::TripleO::ComputeOvsDpdkSriov::Net::SoftwareConfig:
    /home/stack/ovs-dpdk/templates/nic-configs/computedpdksriov.yaml

parameter_defaults:
  # This section is where deployment-specific configuration is done
  #
  # NOTE: (Since Rocky)
  # ControlPlaneSubnetCidr: It is no longer a requirement to provide the
  #                         parameter. The attribute is resolved from the
  #                         ctlplane subnet(s).
  # ControlPlaneDefaultRoute: It is no longer a requirement to provide this
  #                           parameter. The attribute is resolved from the
  #                           ctlplane subnet(s).
  # EC2MetadataIp: It is no longer a requirement to provide this parameter. The
  #                attribute is resolved from the ctlplane subnet(s).
  #

  # Customize the IP subnet to match the local environment
  StorageNetCidr: '10.72.51.192/27'
  # Customize the IP range to use for static IPs and VIPs
  StorageAllocationPools: [{'start': '10.72.51.193', 'end': '10.72.51.220'}]
  # Customize the VLAN ID to match the local environment
  StorageNetworkVlanID: 189


  # Customize the IP subnet to match the local environment
  StorageMgmtNetCidr: '10.72.51.160/27'
  # Customize the IP range to use for static IPs and VIPs
  StorageMgmtAllocationPools: [{'start': '10.72.51.161', 'end': '10.72.51.188'}]
  # Customize the VLAN ID to match the local environment
  StorageMgmtNetworkVlanID: 188


  # Customize the IP subnet to match the local environment
  InternalApiNetCidr: '10.72.51.224/27'
  # Customize the IP range to use for static IPs and VIPs
  InternalApiAllocationPools: [{'start': '10.72.51.225', 'end': '10.72.51.252'}]
  # Customize the VLAN ID to match the local environment
  InternalApiNetworkVlanID: 190


  # Customize the IP subnet to match the local environment
  TenantNetCidr: '10.72.52.0/27'
  # Customize the IP range to use for static IPs and VIPs
  TenantAllocationPools: [{'start': '10.72.52.5', 'end': '10.72.52.25'}]
  # Customize the VLAN ID to match the local environment
  TenantNetworkVlanID: 191
  # MTU of the underlying physical network. Neutron uses this value to
  # calculate MTU for all virtual network components. For flat and VLAN
  # networks, neutron uses this value without modification. For overlay
  # networks such as VXLAN, neutron automatically subtracts the overlay
  # protocol overhead from this value.
  TenantNetPhysnetMtu: 1500

  # Customize the IP subnet to match the local environment
  ExternalNetCidr: '10.72.51.128/27'
  # Customize the IP range to use for static IPs and VIPs
  # Leave room if the external network is also used for floating IPs
  ExternalAllocationPools: [{'start': '10.72.51.129', 'end': '10.72.51.156'}]
  # Gateway router for routable networks
  ExternalInterfaceDefaultRoute: '10.72.51.158'
  # Customize the VLAN ID to match the local environment
  ExternalNetworkVlanID: 187


  # Define the DNS servers (maximum 2) for the overcloud nodes
  # When the list is not set or empty, the nameservers on the ctlplane subnets will be used.
  # (ctlplane subnets nameservers are controlled by the ``undercloud_nameservers`` option in ``undercloud.conf``)
  DnsServers: [10.72.17.5]
  # List of Neutron network types for tenant networks (will be used in order)
  NeutronNetworkType: 'vxlan, vlan'
  NeutronTunnelTypes: 'vxlan'
  NeutronEnableDVR: false
  NeutronBridgeMappings: "datacentre:br-ex,dpdk0:br-dpdk0"
  # Neutron VLAN ranges per network, for example 'datacentre:1:499,tenant:500:1000':
  NeutronNetworkVLANRanges: 'datacentre:187:187,dpdk0:900:904,sriov-1:900:904'
  # Customize bonding options, e.g. "mode=4 lacp_rate=1 updelay=1000 miimon=100"
  # for Linux bonds w/LACP, or "bond_mode=active-backup" for OVS active/backup.
  #BondInterfaceOvsOptions: "bond_mode=active-backup"

  NeutronOVSFirewallDriver: openvswitch
  NovaEnableNUMALiveMigration: true

  ##########################
  # OVS DPDK configuration #
  ##########################

  ComputeOvsDpdkParameters:
    IsolCpusList: 2,18,4,20,6,22,8,24,10,26,12,28,14,30,3,19,5,21,7,23,9,25,11,27,13,29,15,31
    KernelArgs: default_hugepagesz=1GB hugepagesz=1G hugepages=32 iommu=pt intel_iommu=on
      isolcpus=2,18,4,20,6,22,8,24,10,26,12,28,14,30,3,19,5,21,7,23,9,25,11,27,13,29,15,31
    NovaReservedHostMemory: 4096
    NovaComputeCpuDedicatedSet: 4,20,6,22,8,24,10,26,12,28,14,30,5,21,7,23,9,25,11,27,13,29,15,31
    OvsDpdkCoreList: 0,16,1,17
    OvsDpdkMemoryChannels: 4
    OvsDpdkSocketMemory: "1024,4096"
    OvsPmdCoreList: 2,18,3,19

  #################################
  # OVS DPDK SR-IOV configuration #
  #################################

  ComputeOvsDpdkSriovParameters:
    IsolCpusList: 2,18,4,20,6,22,8,24,10,26,12,28,14,30,3,19,5,21,7,23,9,25,11,27,13,29,15,31
    KernelArgs: default_hugepagesz=1GB hugepagesz=1G hugepages=32 iommu=pt intel_iommu=on
      isolcpus=2,18,4,20,6,22,8,24,10,26,12,28,14,30,3,19,5,21,7,23,9,25,11,27,13,29,15,31
    TunedProfileName: "cpu-partitioning"
    NovaComputeCpuDedicatedSet: 4,20,6,22,8,24,10,26,12,28,14,30,5,21,7,23,9,25,11,27,13,29,15,31
    NovaReservedHostMemory: 4096
    OvsDpdkSocketMemory: "1024,4096"
    OvsDpdkMemoryChannels: "4"
    OvsDpdkCoreList: 0,16,1,17
    OvsPmdCoreList: 2,18,3,19
    NovaComputeCpuSharedSet: [0,16,1,17]
    # When using NIC partioning on SR-IOV enabled setups, 'derive_pci_passthrough_whitelist.py'
    # script will be executed which will override NovaPCIPassthrough.
    # No option to disable as of now - https://bugzilla.redhat.com/show_bug.cgi?id=1774403
    NovaPCIPassthrough:
      - devname: "enp130s0f1"
        trusted: "true"
        physical_network: "sriov-1"

    # NUMA aware vswitch
    # NeutronPhysnetNUMANodesMapping: {dpdk-mgmt: [0]}
    # NeutronTunnelNUMANodes: [0]
    NeutronPhysicalDevMappings:
    - sriov-1:enp130s0f1

  ############################
  #  Scheduler configuration #
  ############################
  NovaSchedulerDefaultFilters:
    - "RetryFilter"
    - "AvailabilityZoneFilter"
    - "ComputeFilter"
    - "ComputeCapabilitiesFilter"
    - "ImagePropertiesFilter"
    - "ServerGroupAntiAffinityFilter"
    - "ServerGroupAffinityFilter"
    - "PciPassthroughFilter"
    - "NUMATopologyFilter"
    - "AggregateInstanceExtraSpecsFilter"
